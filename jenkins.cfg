[buildout]
extends = buildout.cfg

# index = http://colladaverda.upc.edu
# allow-hosts = colladaverda.upc.edu
index = http://f.pypi.python.org/simple
allow-hosts = f.pypi.python.org
timeout = 20

jenkins-test-directories =
    src/max/max

parts =
#   Framework
    pyramid
#    libevent
#    gevent
#    omelette
    test
    zopepy
    jenkins-test
    jenkins-test-coverage
    coverage

#   Nginx
#    headers-module
#    nginx-config
#    nginx

#   Databases & messaging
    mongodb
#    node
#    redis
#    redis_move
#   rabbitmq

    supervisor

#   Config files
    max-ini
    bigmax-ini
#    maxtalk-ini
#    redis-conf
#    node-conf
    maxsettings
#    enable-ssl

[jenkins-test]
recipe = collective.xmltestreport
eggs = ${buildout:jenkins-test-eggs}
script = jenkins-test
# XXX: For now we run robot tests together with all other tests
#defaults = ['--auto-color', '--auto-progress', '--xml', '-t', '!robot_']
defaults = ['--auto-color', '--auto-progress', '--xml']

[jenkins-test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    # Remove old results
    echo "Erase old coverage results."
    bin/coverage erase
    # Collect test coverage results for all packages
    echo "Run test coverage analysis for all packages."
    DIRECTORIES="${buildout:jenkins-test-directories}"
    for pkgdir in $DIRECTORIES
    do
        # Runs a code coverage analysis on top of the "jenkins-test" script for
        # all packages. The data will be collected in a ".coverage" output file
        # in the buildout directory.
        echo "Analyse $pkgdir"
        bin/coverage run -p --source=$pkgdir bin/jenkins-test --all
    done
    echo "Create test coverage report."
    # Combine all package analysis
    bin/coverage combine
    # Generates a "coverage.xml" file that Jenkins can read and process from the
    # ".coverage" file that the coverage report created.
    bin/coverage xml -i -o ${buildout:directory}/parts/jenkins-test/coverage.xml
    echo "Test coverage report finished."
output = ${buildout:directory}/bin/jenkins-test-coverage
mode = 755

[coverage]
recipe = zc.recipe.egg
eggs = coverage
interpreter = ${buildout:directory}/bin/zopepy

[zopepy]
recipe = zc.recipe.egg
eggs = ${buildout:jenkins-test-eggs}
interpreter = zopepy
scripts = zopepy

[sources]
max = git git://github.com/UPCnet/max.git branch=newpermissionmodel
bigmax = git git://github.com/UPCnet/bigmax.git branch=newpermissionmodel
maxclient = git git://github.com/UPCnet/maxclient.git
max.ui.js = git git://github.com/UPCnet/max.ui.js.git egg=false branch=conversations
maxtalk = git git://github.com/UPCnet/maxtalk.git
maxtalk.node = git git://github.com/UPCnet/maxtalk.node.git egg=false

[supervisor]
recipe = collective.recipe.supervisor
port = 9101
user = admin
password = admin
serverurl = http://localhost:9101
programs =
    10 mongodb ${buildout:directory}/bin/mongod [--port ${ports:mongodb} --dbpath ${buildout:directory}/var/data --master --logpath ${buildout:directory}/var/log/mongodb.log --directoryperdb --rest] true
