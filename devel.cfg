[buildout]
versions = versions

parts =
#   Framework
    libevent
    gevent
    max
    omelette
    test
    test-osiris
    test-bunny
    coverage
    supervisor
    releaser

#   Nginx
    headers-module
    nginx-config
    nginx

#   Databases & messaging
    mongodb
    rabbitmq

#   Config files
    mongodb-indexes
    max-ini
    bigmax-ini
    maxsettings
    osiris-ini
    rabbit-server-ini
    rabbit-build-http-auth
    rabbit-config-ini
    maxbunny-ini
    mongocli

eggs =
develop =

extensions = mr.developer
auto-checkout = *

#index = http://colladaverda.upc.edu/pypi
#allow-hosts = colladaverda.upc.edu

find-links =
    http://pypi.upc.edu/links

[versions]
zc.buildout = 2.2.1

# ·····································································
#                   Variables
# ·····································································

[sources]
max = git git@github.com:UPCnet/max.git branch=develop
bigmax = git git@github.com:UPCnet/bigmax.git branch=develop
maxclient = git git@github.com:UPCnet/maxclient.git branch=develop
max.ui.js = git git@github.com:UPCnet/max.ui.js.git egg=false branch=develop
maxscripts = git git@github.com:UPCnet/maxscripts branch=develop
maxbunny = git git@github.com:UPCnet/maxbunny.git branch=develop
maxtweety = git git@github.com:UPCnet/maxtweety.git branch=develop
osiris = git git@github.com:sneridagh/osiris.git branch=develop
pyramid_osiris = git git@github.com:sneridagh/pyramid_osiris.git branch=develop
rabbitmq_auth_backend_http = git git@github.com:simonmacmullen/rabbitmq-auth-backend-http egg=false

[downloads]
nginx = http://nginx.org/download/nginx-1.4.2.tar.gz
rabbitmq = http://www.rabbitmq.com/releases/rabbitmq-server/v3.1.5/rabbitmq-server-3.1.5.tar.gz
headers-module = https://github.com/agentzh/headers-more-nginx-module/tarball/v0.20
pcre = http://downloads.sourceforge.net/project/pcre/pcre/8.32/pcre-8.32.tar.gz
libevent = https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz

[hosts]
main = localhost
# Short name for rabbit nodename (no DNS suffix)
main-rabbit = localhost
rabbitmq = localhost
mongodb = localhost
mongodb_cluster =
max = localhost

[ports]
nginx = 8081
osiris = 6540
max = 6543
bigmax = 6544
mongodb = 27017
rabbitmq = 5672
rabbitmq-manage = 15672
rabbitmq-stomp = 52613
rabbitmq-web-stomp = 15674
supervisor = 9101

[urls]
max = http://${hosts:main}:${ports:nginx}
stomp = http://${hosts:main}:${ports:nginx}/stomp
mongo = mongodb://${hosts:mongodb}:${ports:mongodb}
rabbit = amqp://guest:guest@${hosts:rabbitmq}:${ports:rabbitmq}/%2F
rabbit-manage = http://${hosts:rabbitmq}:${ports:rabbitmq-manage}
oauth = https://oauth.upcnet.es

[users]
nginx = pyramid

[osiris]
ldap = false
workers = 1
max-requests = 1000
timeout = 300

# ·····································································
#                   Pyramid Apps & dependencies
# ·····································································

[libevent]
recipe = zc.recipe.cmmi
url = ${downloads:libevent}

[gevent]
recipe = zc.recipe.egg:custom
include-dirs = ${libevent:location}/include
library-dirs = ${libevent:location}/lib

[gunicorn]
workers = 1
max-requests = 1000
timeout = 300

[max]
recipe = zc.recipe.egg
dependent-scripts = true
eggs =
    pyramid
    gunicorn
    gevent
    max
    bigmax
    maxclient
    maxscripts
    maxbunny
    maxtweety
interpreter = python
development = true
use_osiris = true
debug_api = false
oauth_passtrough = true

# ·····································································
#                   Databases & messaging
# ·····································································

[mongodb]
version = 2.4.4
recipe = rod.recipe.mongodb
darwin-32bit-url = http://downloads.mongodb.org/osx/mongodb-osx-i386-${mongodb:version}.tgz
darwin-64bit-url = http://downloads.mongodb.org/osx/mongodb-osx-x86_64-${mongodb:version}.tgz
linux2-32bit-url = http://downloads.mongodb.org/linux/mongodb-linux-i686-${mongodb:version}.tgz
linux2-64bit-url = http://downloads.mongodb.org/linux/mongodb-linux-x86_64-${mongodb:version}.tgz
linux3-32bit-url = http://downloads.mongodb.org/linux/mongodb-linux-i686-${mongodb:version}.tgz
linux3-64bit-url = http://downloads.mongodb.org/linux/mongodb-linux-x86_64-${mongodb:version}.tgz
script_name = start_master.sh
quiet=false
fork=false
logpath=${buildout:directory}/var/log/mongodb.log
dbpath=${buildout:directory}/var/data
directoryperdb=true
master=true
update=true

[mongodb-indexes]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = ${buildout:directory}/config/scripts/mongodb-create-indexes ${hosts:mongodb}:${ports:mongodb} ${buildout:directory}/config/mongodb.indexes

[rabbitmq]
recipe = rod.recipe.rabbitmq
url = ${downloads:rabbitmq}
home = ${buildout:directory}/parts/rabbitmq
scripts = ${rabbitmq:home}/scripts
nodename = rabbit@${hosts:main-rabbit}

[rabbit-build-http-auth]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
       cp -r ${buildout:directory}/src/rabbitmq_auth_backend_http ${buildout:directory}/parts/rabbitmq/plugins-src/rabbitmq_auth_backend_http
       cd ${buildout:directory}/parts/rabbitmq/plugins-src/rabbitmq_auth_backend_http
       make
       cp ${buildout:directory}/parts/rabbitmq/plugins-src/rabbitmq_auth_backend_http/dist/rabbitmq_auth_backend_http*.ez ${buildout:directory}/parts/rabbitmq/plugins/
       echo "rabbitmq_auth_backend_http plugin installed!"

# ·····································································
#                   Nginx HTTP Server & dependencies
# ·····································································

[headers-module]
recipe = hexagonit.recipe.download
url = ${downloads:headers-module}
strip-top-level-dir = true
ignore-existing = true

[nginx]
module_url = ${headers-module:url}
recipe = hexagonit.recipe.cmmi
url = ${downloads:nginx}
configure-options =
    --with-http_stub_status_module
    --with-http_ssl_module
    --add-module=${buildout:directory}/parts/headers-module
    --conf-path=${buildout:directory}/config/nginx/default.conf
    --error-log-path=${buildout:directory}/var/log/nginx-error.log
    --pid-path=${buildout:directory}/var/nginx.pid
    --lock-path=${buildout:directory}/var/nginx.lock

# ·····································································
#                   Configuration generators
# ·····································································

[nginx-config]
recipe = collective.recipe.template
input = ${buildout:directory}/config/templates/nginx.conf.template
output = ${buildout:directory}/config/nginx.conf
certificate = ssl/localhost.crt
certificate-key = ssl/localhost.key

[mongocli]
recipe = collective.recipe.template
input = ${buildout:directory}/config/templates/mongocli.template
output = ${buildout:directory}/bin/mongocli

[max-ini]
recipe = collective.recipe.template
input = ${buildout:directory}/config/templates/max.ini.template
output = ${buildout:directory}/config/max.ini

[bigmax-ini]
recipe = collective.recipe.template
input = ${buildout:directory}/config/templates/bigmax.ini.template
output = ${buildout:directory}/config/bigmax.ini

[maxsettings]
recipe = collective.recipe.template
input = ${buildout:directory}/config/templates/max_settings.template
output = ${buildout:directory}/.max_settings

[osiris-ini]
recipe = collective.recipe.template
input = ${buildout:directory}/config/templates/osiris.ini.template
output = ${buildout:directory}/config/osiris.ini

[rabbit-server-ini]
recipe = collective.recipe.template
input = ${buildout:directory}/config/templates/rabbitmq-env.template
output = ${buildout:directory}/bin/rabbitmq-env

[rabbit-config-ini]
recipe = collective.recipe.template
input = ${buildout:directory}/config/templates/rabbitmq.config.template
output = ${buildout:directory}/config/rabbitmq/rabbitmq.config

[maxbunny-ini]
recipe = collective.recipe.template
input = ${buildout:directory}/config/templates/maxbunny.ini.template
output = ${buildout:directory}/config/maxbunny.ini

# ·····································································
#                   Testing
# ·····································································

[test]
recipe = tranchitella.recipe.testrunner
eggs = max [test]
defaults = ['--auto-color', '--auto-progress']

[test-osiris]
recipe = tranchitella.recipe.testrunner
eggs = osiris [test]
defaults = ['--auto-color', '--auto-progress']

[coverage]
recipe = tranchitella.recipe.testrunner
eggs = ${test:eggs}
defaults = ['--coverage-module', 'max', '--coverage-branch', '--auto-progress', '--coverage-html', '--coverage-xml']

[test-bunny]
recipe = tranchitella.recipe.testrunner
eggs = maxbunny [test]
defaults = ['--auto-color', '--auto-progress']

# ·····································································
#                   Everyting else
# ·····································································

[supervisor]
recipe = collective.recipe.supervisor
user = admin
password = admin
port = ${ports:supervisor}
serverurl = http://0.0.0.0:${ports:supervisor}
programs =
    10 mongodb ${buildout:directory}/bin/mongod [--port ${ports:mongodb} --dbpath ${buildout:directory}/var/data --master --logpath ${buildout:directory}/var/log/mongodb.log --directoryperdb --rest] true
    10 rabbitmq ${buildout:directory}/bin/rabbitmq-server true
    20 max ${buildout:directory}/bin/gunicorn_paster [${buildout:directory}/config/max.ini --timeout ${gunicorn:timeout} --workers ${gunicorn:workers} --max-requests ${gunicorn:max-requests} --worker-class gevent] true
    20 bigmax ${buildout:directory}/bin/gunicorn_paster [${buildout:directory}/config/bigmax.ini --timeout ${gunicorn:timeout} --workers ${gunicorn:workers} --max-requests ${gunicorn:max-requests} --worker-class gevent] true
    40 nginx ${nginx:location}/sbin/nginx [-c ${buildout:directory}/config/nginx.conf]
    40 osiris ${buildout:directory}/bin/gunicorn_paster [${buildout:directory}/config/osiris.ini --timeout ${osiris:timeout} --workers ${osiris:workers} --max-requests ${osiris:max-requests} --worker-class gevent] true
    60 maxbunny (autostart=false) ${buildout:directory}/bin/maxbunny [-c ${buildout:directory}/config/maxbunny.ini] true
    60 maxtweety (autostart=false) ${buildout:directory}/bin/maxtweety [-c ${buildout:directory}/config/maxbunny.ini] true

[omelette]
recipe = collective.recipe.omelette
eggs = ${max:eggs}

[releaser]
recipe = zc.recipe.egg
eggs = zest.releaser
