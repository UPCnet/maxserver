# copy this file in /etc/nginx/conf.d/

server {
  listen     80;
  server_name max.local;
  access_log /var/log/nginx/nginx.max.access.log  ;
  error_log /var/log/nginx/nginx.max.error.log  ;

  client_max_body_size 42m;

  # Specify a charset
  charset utf-8;

  # Custom 404 page
  error_page 404 /static/404.html;

  more_set_headers 'Access-Control-Allow-Origin: *';
  more_set_headers 'Access-Control-Allow-Credentials: true';
  more_set_headers 'Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS';
  more_set_headers 'Access-Control-Allow-Headers: X-HTTP-Method-Override,X-Oauth-Token,X-Oauth-Username,X-Oauth-Scope,DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Has-Remaining-Items,X-totalItems';
  more_set_headers 'Access-Control-Expose-Headers: X-Has-Remaining-Items,X-totalItems';

  include /etc/nginx/max-instances/*.conf ;

}

server {
  listen     80 default_server ;
  server_name oauth.local _ ;
  client_max_body_size 42m;
  access_log /var/log/nginx/nginx.osiris.access.log  ;
  error_log /var/log/nginx/nginx.osiris.error.log  ;

  # e.g. "localhost" to accept all connections, or "www.example.com"
  # to handle the requests for "example.com" (and www.example.com)
  # XXX: Change on production
  # server_name oauth.upc.edu;

  # Path for static files
  #root /var/nginx/static/;

  #Specify a charset
  charset utf-8;

  # Custom 404 page
  error_page 404 /404.html;

  more_set_headers 'Access-Control-Allow-Origin: *';
  more_set_headers 'Access-Control-Allow-Credentials: true';
  more_set_headers 'Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS';
  more_set_headers 'Access-Control-Allow-Headers: X-HTTP-Method-Override,X-Oauth-Token,X-Oauth-Username,X-Oauth-Scope,DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Has-Remaining-Items,X-From-Utalk';

  include /etc/nginx/osiris-instances/*.conf ;
}


server {
  listen 80;

  proxy_buffer_size   128k;
  proxy_buffers   4 256k;
  proxy_busy_buffers_size   256k;

  server_name hub.local ;
  access_log /var/log/nginx/nginx.hub.access.log  ;
  error_log /var/log/nginx/nginx.hub.error.log  ;

  rewrite ^/(.*)/$ /$1 permanent;


  # ADD CORS headers to responses
  more_set_headers 'Access-Control-Allow-Origin: *';
  more_set_headers 'Access-Control-Allow-Credentials: true';
  more_set_headers 'Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS';
  more_set_headers 'Access-Control-Allow-Headers: X-HTTP-Method-Override,X-Oauth-Token,X-Oauth-Username,X-Oauth-Scope,DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Has-Remaining-Items,X-totalItems,X-From-Utalk';
  more_set_headers 'Access-Control-Expose-Headers: X-Has-Remaining-Items,X-totalItems';

  # Respond to CORS OPTION requests
  location / {

      # CORS PreFlight
      if ($request_method = 'OPTIONS') {

          # Tell client that this pre-flight info is valid for 20 days
          add_header 'Access-Control-Max-Age' 1728000;
          add_header 'Content-Type' 'text/plain charset=UTF-8';
          add_header 'Content-Length' 0;

          return 200;
      }

        # checks for static file, if not found proxy to app
        try_files $uri @proxy_to_app;
  }

#  # Path for static files
#  TODO --------------------------------------------
#  root /var/nginx/static/hub;
#  location /info {
#      root /var/nginx/static/hub;
#      add_header Content-Type application/json;
#   }

  location @proxy_to_app {
      access_log   /var/log/nginx/nginx.hub.access.log;
      proxy_set_header X-Virtual-Host-URI $scheme://hub.local;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;

      proxy_pass   http://host.docker.internal:6546;
  }

}
