[app:main]
use = egg:max
pyramid.reload_templates = ${max:development}
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.debug_templates = ${max:development}
pyramid.default_locale_name = en
pyramid.includes = pyramid_tm

max.server_id = ${max:name}
max.server = ${urls:max}
max.restricted_user_visibility_mode = False
max.oauth_server = ${urls:oauth}
max.oauth_check_endpoint = ${urls:oauth}/checktoken
max.oauth_standard = ${max:use_osiris}
max.rabbitmq = ${urls:rabbit}
max.rabbitmq-manage = ${urls:rabbit-manage}
cache.regions = oauth_token
cache.type = memory
cache.oauth_token.expire = 60
max.debug_api = ${max:debug_api}
max.oauth_passtrough = ${max:oauth_passtrough}
avatar_folder = ${buildout:directory}/var/avatars
config_directory = ${buildout:directory}/config/

mongodb.url = ${urls:mongo}
mongodb.db_name = max_${max:name}
mongodb.cluster = ${max:cluster_enabled}
mongodb.hosts = ${hosts:mongodb_cluster}
mongodb.replica_set = maxcluster

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = ${ports:max}

# Begin logging configuration

[loggers]
keys = root, max, exceptions

[handlers]
keys = console, exceptionlog

[formatters]
keys = generic, clean

[logger_root]
level = WARN
handlers = console

[logger_max]
level = WARN
handlers =
qualname = max
propagate=0

[logger_exceptions]
level = DEBUG
handlers = exceptionlog
qualname = exceptions

[handler_exceptionlog]
level = DEBUG
class = FileHandler
args = ('${buildout:directory}/var/log/exceptions.log', 'a')
formatter = clean

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_clean]
format = %(message)s

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
