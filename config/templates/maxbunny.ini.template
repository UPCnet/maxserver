# Used for rabbitMQ publishers, consumers and scripts
[rabbitmq]
server = ${urls:rabbit}

[twitter]
consumer_key =
consumer_secret =
access_token =
access_token_secret =

[push]
push_certificate_file = ${buildout:directory}/config/apns-production.pem
android_push_api_key =

[max_default]
# Global hashtag with no #
hashtag = upc
server = ${urls:max}
oauth_server = ${urls:oauth}
config_directory = ${buildout:directory}/config/

[max_other]
# Global hashtag with no #
hashtag = upc2
server = ${urls:max}
oauth_server = ${urls:oauth}
config_directory = ${buildout:directory}/config/

# Used by the RabbitMQ initializator script only
[mongodb]
mongodb.url = ${urls:mongo}
mongodb.db_name = max
mongodb.cluster = false
mongodb.hosts = ${hosts:mongodb_cluster}
mongodb.replica_set = maxcluster

# Begin logging configuration

[loggers]
keys = root, bunny, push, tweety

[handlers]
keys = console, conclean

[formatters]
keys = generic, clean

[logger_root]
level = WARN
handlers = console

[logger_bunny]
level = INFO
handlers = console
qualname = bunny
propagate = 0

[logger_push]
level = INFO
handlers = conclean
qualname = push
propagate = 0

[logger_tweety]
level = INFO
handlers = conclean
qualname = tweety
propagate = 0

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_conclean]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = clean

[handler_bunny]
level = INFO
class = FileHandler
args = ('${buildout:directory}/var/log/maxbunny.log', 'a')
formatter = generic

[handler_tweety]
level = INFO
class = FileHandler
args = ('${buildout:directory}/var/log/maxtweety.log', 'a')
formatter = generic

[formatter_generic]
format = %(levelname) -10s %(asctime)s %(name) -10s %(funcName) -35s %(lineno) -5d: %(message)s

[formatter_clean]
format = %(asctime)s %(message)s
# End logging configuration
